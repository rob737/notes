------ Cloudfront fundamentals :

Cloudfront is a CDN.

cloudfront has 216 edge locations (Points of presence).

can be used as DDOS protection as well.

Flow :

Client ---> Cloudfront edge location (local cache) --> Origin (S3 or any http backend like ALB, EC2 instance etc).

if edge location doesn't have content then it requests content from origin server and stores it in it's local cache.
This allow subsequent requests from client in same edge location to access the contents with minimal latency.


Cloudfront to origin server is private network.

files are cached for a TTL.

Origin Access Control can be leveraged to configure security around access. (This is basically analogous to bucket policy).


------ Caching Strategy :

Contents can be cached at edge location based on application layer properties like :

1. Headers
2. Query String Parameters
3. Session Cookies


TTL can be set by origin using the cache control header or expires header.

The header "x-cache": "Miss from cloudfront" / "Hit from cloudfront", will tell you if the request was from cloudfront or origin server.

Note : EC2 instances must be public otherwise cloudront will not be able to access it as there is no private VPC connection 
       between EC2 and cloudfront unlike EC2 and S3.
	   
------- Signed URL vs Signed Cookie :

Signed URL : One file has one signed URL.

Signed Cookie : One signed cookie can span over multiple files.	   


------ Cloudfront Signed URL vs S3 pre-signed URL :

-- Cloudfront signed URL :

This is for access to path irrespective of the origin.

Can filter by IP, path, date, expiration.

1. client -> application code -> authentication/authorization. -> gets cloudfront signed url.

2. After getting cloudfront signed url from step 1, it can download content from cloudfront.

-- Presigned URL :
1. Issues a request as the person who has generated pre-signed url.

2. This is specific to S3 upload.



------ Public vs Private key :

Private key is used by EC2 instances/applications to sign URLs (i.e. encrypt url and it's contents).
Public key (uploaded) by cloudfront is used to verify URLs (i.e. decrypt url and figure out if request is valid).

Note : Understand public / private key signing before proceeding #############################

Resource : https://www.youtube.com/watch?v=r1nJT63BFQ0

basically the concept is as follows :

1. client connects to cloudflare
2. cloudflare sends public key to client for encryption
3. EC2 instance decrypts the content using it's private key.

sending public key is safe because it is protected by wrapping certificate.

certificate is nothing but encrypted set of characters using a different set of prublic/private keys issued by CA authority.

using this certificate client identifies whether the response is from cloudflare or someone sniffing in between.


----- 
Reduce the number of edge locations to reduce price.