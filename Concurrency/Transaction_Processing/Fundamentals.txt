---- What is a transaction ?

A transaction is a collection of operations on the physical and abstract application state.

Begin transaction;


<Set of operations within Transaction>


Commit Transaction;

In case of failure, Rollback transaction pipeline would be triggered.

---- RPC :

Remote procedure calls (RPCs) are a way for one process to invoke a program in another remote process as though the subroutine in the remote process were local.


---- Memory :

At a low level of abstraction, the memory looks like an array of bytes to the processor; but at the processor instruction set level, 
there is already a memory-mapping mechanism that translates logical addresses (virtual memory addresses) to physical addresses. 
This mapping hardware is manipulated by the operating system software to give the processor a virtual address space at any instant. 
The processor executes instructions from virtual memory, and it reads and alters bytes from the virtual memory.


---- Electronic Memory :

Bit is identified by electronic charge i.e. if charged then 1 else 0.

Main/Primary Memory : RAM

Secondary Memory : Disk

Processor cannot directly access secondary memory.

A block of memory say 10 KB (Kilo Bytes) is copied to main memory from secondary memory and then processor accesses it.

Since, speed of memory and processor is different so we need to have a cache on processor itself that will allow processor
to continue execution rather than waiting for memory to provide instructions.



---- Magnetic Disks :

Each disk has track which in turn has sectors.

There are multiple disks that are stacked one over another with the help of spindle. (Imagine Idli container)

spindle is attached to a disk rod which in turn has disk head that read/writes sectors from a track.

Since, disks are stacked on top of another so at any instant all disk heads form a cyliner like structure which combines all the sectors
from all the tracks from all the disks pointed by the head.

Disk Access time = seek time + disk head rotation time + transfer rate.

seek time is basically identifying the cylinder then track and then sector to read/write.
This is termed as sector address space which is 3 Dimensional as it involves cylinder number, track number and ultimately sector number.

rotation time is the overhead to rotate the disk to reach to intended cylinder.


Sequential access on disk is always faster than random access as it involves seek time and rotation time overhead only once.

Principle of locality: It states that data that was used recently is likely to soon be used again.


---- Processors :

Processor speed is measured in terms of mips i.e. million instructions per second.


---- Communication Hardware :

Processors and memories are connected by wires called the network.

While some wires are just impurities on a chip, others are fiber-optic cables carrying light signals. 
The basic property of a wire is that a signal injected at one end eventually arrives at the other end.


The time to transmit a message of M bits via a wire is determined by two parameters: 
(1) the wire’s bandwidth—that is, how many bits/second it can carry—and 
(2) the wire’s length (in meters), which determines how long the first bit will take to arrive.

Address spaces, processes, and messages are the software analogs of memories, processors, and wires.

The process address space is actually virtual memory; that is, the addresses go through at least one level of translation to compute the physical memory address.

To simplify memory addressing, the virtual address space is divided into fixed-size segment slots.
Thus, addressing becomes 2 dimensional of the form (segment_number, byte).
In turn, segments are partitioned into virtual memory pages which are the unit of transfer between main and secondary memory.

Hence, virtual memory addressing is basically of the form (segment_number, page, byte).

Threads share the same address space as process but different threads may have different scheduling priorities. 


--- Messages and Sessions :

Session is analogous to wire and message is analogous to signal on the wire.

Formally, Session is a bi-directional message pipe using which two processes can communicate.

Session needs to be present for processes to communicate among themselves.

Client sends an open_session datagram to the server and waits for a response.

Server listens to network interface card for incoming open_session datagram.


One of the benefits of creating session is to cache dns resolution, client/server authentication information which are expensive operations
and can be done only once at the inception i.e. it's one time cost is amortized across future messages.